
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
@use "./../m3-theme.scss";

@include mat.core();

// :root {
//   @include mat.all-component-themes(m3-theme.$dark-theme);
//   // @include mat.core-theme(m3-theme.$light-theme);
//   // @include mat.button-theme(m3-theme.$light-theme);
// }



// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!

// Define the theme object.
// $openstep-theme: mat.define-theme((
//   color: (
//     theme-type: light,
//     primary: mat.$azure-palette,
//     tertiary: mat.$blue-palette,
//   ),
//   density: (
//     scale: 0,
//   )
// ));


$openstep-theme: mat.define-theme((
  color: (
    theme-type: light,
    primary: m3-theme.$primary,
    tertiary: m3-theme.$tertiary,
  ),
  density: (
    scale: 0,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
:root {
  @include mat.all-component-themes($openstep-theme);
}

body {
  background-color: var(--mat-app-background-color);
}

// Comment out the line below if you want to use the pre-defined typography utility classes.
// For more information: https://material.angular.io/guide/typography#using-typography-styles-in-your-application.
// @include mat.typography-hierarchy($openstep-theme);

// Comment out the line below if you want to use the deprecated `color` inputs.
// @include mat.color-variants-backwards-compatibility($openstep-theme);
/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }


.observation-marker-container {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 50% 50% 50% 0;
  border: 2px solid #ffffff;
  width: 100%;
  height: 100%;
  transform: rotate(-44deg);
  background-color: var(--mdc-filled-button-container-color);
  color: var(--mat-fab-foreground-color);
  // box-shadow: var(--mdc-extended-fab-container-elevation-shadow);
}

.last-step{
	-webkit-animation: flash linear 1.5s infinite;
	animation: flash linear 1.5s infinite;
}

.selected-marker {
    box-shadow: 0 0 0 4px rgb(255, 196, 0), 0 0 0 6px rgba(255, 196, 0, 0.527);
}

// #013d2e

@-webkit-keyframes flash {
	50% { box-shadow: 0 0 0 6px var(--mdc-fab-container-color);} 
}
@keyframes flash {
	50% { box-shadow: 0 0 0 6px rgb(255, 136, 0), 0 0 0 8px rgba(255, 136, 0, 0.527);} 
}
.observation-marker-container:hover>.hover-detail{
display: block;
}

.hover-detail {
  // display: none;
transform: rotate(44deg);
background-color: white;
border-radius: 5px;
padding: 2rem;


}

.height-100 {
  height: 100%;
}



.img-container {
  width: 100%;
  height: 300px;
  background-size: cover;
  background-position: center center;
  border-radius: 25px;
  border-radius: 25px;
  background-color: rgba(0, 0, 0, 0.5);
  padding: 1rem;

}

.info-overlay {
  border-radius: var(--mdc-elevated-card-container-shape, var(--mat-app-corner-medium));
  padding-top:0.5rem;
  padding-left: 0.5rem;
  background: linear-gradient(to top, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.596));
}

.overlay {
  width: 100%;
  height: 100%;
  position: absolute;
  overflow: hidden;
  top: 0;
  left: 0;
  color: white;
  border-radius: 25px;
}

a {
  text-decoration-color: var(--mdc-filled-button-container-color)!important;
}


.leaflet-popup-content {
  margin: 0!important;
  width: 300px!important ;
}

.leaflet-popup-content-wrapper, .leaflet-popup-tip {
  background-color: transparent!important;
}

mat-icon {
  color: var(--mdc-filled-button-container-color)!important;
}

.primary-color {
  color: var(--mdc-filled-button-container-color)!important;

}


.icon-text {
  display: flex !important;
  align-items: center;
}



.mat-icon {
  vertical-align: middle;
}

.polyline-primary {
  stroke: var(--mdc-filled-button-container-color);
  fill: none;
  stroke-dasharray: 10,10; 
  stroke-width: 5;  
}


.button-see-step {
  position: absolute;
  bottom: 5%;
}
